unit LCD0102;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, cxGraphics, cxControls, cxLookAndFeels, cxLookAndFeelPainters,
  dxSkinsCore, dxSkinsDefaultPainters, dxSkinscxPCPainter, dxLayoutControl,
  StdCtrls, DBCtrls, Mask, Buttons, dxSkinsForm, jpeg, ExtCtrls, Menus,
  cxButtons, cxContainer, cxEdit, cxGroupBox, cxPC, cxStyles, cxCustomData,
  cxFilter, cxData, cxDataStorage, DB, cxDBData, cxGridLevel, cxClasses,
  cxGridCustomView, cxGridCustomTableView, cxGridTableView, cxGridDBTableView,
  cxGrid, cxTextEdit, cxMaskEdit, cxDropDownEdit, cxDBEdit, cxCheckBox, Grids,
  DBGrids, dxSkinBlack, dxSkinBlue, dxSkinCaramel, dxSkinCoffee, dxSkinDarkRoom,
  dxSkinDarkSide, dxSkinFoggy, dxSkinGlassOceans, dxSkiniMaginary, dxSkinLilian,
  dxSkinLiquidSky, dxSkinLondonLiquidSky, dxSkinMcSkin, dxSkinMoneyTwins,
  dxSkinOffice2007Black, dxSkinOffice2007Blue, dxSkinOffice2007Green,
  dxSkinOffice2007Pink, dxSkinOffice2007Silver, dxSkinOffice2010Black,
  dxSkinOffice2010Blue, dxSkinOffice2010Silver, dxSkinPumpkin, dxSkinSeven,
  dxSkinSharp, dxSkinSilver, dxSkinSpringTime, dxSkinStardust, dxSkinSummer2008,
  dxSkinValentine, dxSkinXmas2008Blue, cxMemo, dxSkinBlueprint,
  dxSkinDevExpressDarkStyle, dxSkinDevExpressStyle, dxSkinHighContrast,
  dxSkinMetropolis, dxSkinMetropolisDark, dxSkinOffice2013DarkGray,
  dxSkinOffice2013LightGray, dxSkinOffice2013White, dxSkinOffice2016Colorful,
  dxSkinOffice2016Dark, dxSkinSevenClassic, dxSkinSharpPlus,
  dxSkinTheAsphaltWorld, dxSkinTheBezier, dxSkinVisualStudio2013Blue,
  dxSkinVisualStudio2013Dark, dxSkinVisualStudio2013Light, dxSkinVS2010,
  dxSkinWhiteprint, dxBarBuiltInMenu, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, cxRadioGroup;

type
  TLCD_0102 = class(TForm)
    Panel1: TPanel;
    Pn_Botoes: TPanel;
    bbtn_incluir: TcxButton;
    bbtn_excluir: TcxButton;
    bbtn_alterar: TcxButton;
    bbtn_cancelar: TcxButton;
    bbtn_sair: TcxButton;
    bbtn_gravar: TcxButton;
    bbtn_pesquisar: TcxButton;
    Pn_Dados: TPanel;
    Label5: TLabel;
    Label3: TLabel;
    Label1: TLabel;
    Label2: TLabel;
    Label4: TLabel;
    Label6: TLabel;
    DBEdit_Cep: TDBEdit;
    Label7: TLabel;
    Label8: TLabel;
    DBEdit8: TDBEdit;
    Label9: TLabel;
    Label10: TLabel;
    DBEdit9: TDBEdit;
    Label11: TLabel;
    Label12: TLabel;
    qry_Declarante: TFDQuery;
    Ds_Declarante: TDataSource;
    cxDBText_Nome: TcxDBTextEdit;
    qry_DeclaranteCODIGO: TIntegerField;
    qry_DeclaranteNOME: TStringField;
    qry_DeclaranteCPF: TStringField;
    qry_DeclaranteENDERECO: TStringField;
    qry_DeclaranteNUM_END: TStringField;
    qry_DeclaranteCOMPLEMENTO: TStringField;
    qry_DeclaranteBAIRRO: TStringField;
    qry_DeclaranteCODCID: TIntegerField;
    qry_DeclaranteCEP: TStringField;
    qry_DeclaranteTELEFONE: TStringField;
    qry_DeclaranteEMAIL: TStringField;
    qry_DeclaranteFLG_SITUACAO: TStringField;
    qry_DeclaranteNOME_CID: TStringField;
    qry_DeclaranteESTADO: TStringField;
    cxDBTextEdit1: TcxDBTextEdit;
    cxDBRG_Situacao: TcxDBRadioGroup;
    cxDBTextEdit2: TcxDBTextEdit;
    cxDBTextEdit3: TcxDBTextEdit;
    cxDBTextEdit4: TcxDBTextEdit;
    cxDBTextEdit5: TcxDBTextEdit;
    cxDBTextEdit6: TcxDBTextEdit;
    cxDBText_CodCid: TcxDBTextEdit;
    FDQuery_Pesquisa: TFDQuery;
    cxDBTextEdit7: TcxDBTextEdit;
    cxDBTextEdit8: TcxDBTextEdit;
    procedure botoes;
    procedure montar_select(wparametro, wcodigo : integer);
    procedure bbtn_sairClick(Sender: TObject);
    procedure bbtn_incluirClick(Sender: TObject);
    procedure bbtn_gravarClick(Sender: TObject);
    procedure bbtn_excluirClick(Sender: TObject);
    procedure bbtn_alterarClick(Sender: TObject);
    procedure bbtn_cancelarClick(Sender: TObject);
    procedure bbtn_pesquisarClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure DBEdit9KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure cxDBText_CodCidKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
  private
    wcodigo : Integer;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  LCD_0102: TLCD_0102;

implementation

{$R *.dfm}

uses Arquivos, DlgContribuiente, DlgCidades;

procedure TLCD_0102.Botoes;
begin
 //tabela em edição
 if dm.IBDS_Contribuiente.State in [dsEdit,dsInsert] then
   begin
      bbtn_incluir.Enabled  := False;
      bbtn_Excluir.Enabled  := False;
      bbtn_alterar.enabled  := false;
      bbtn_Cancelar.Enabled := True;
      bbtn_gravar.Enabled   := True;
      bbtn_pesquisar.Enabled   := False;
      bbtn_sair.Enabled   := False;
   end;
 if dm.IBDS_Contribuiente.State in [dsBrowse] then
   begin
      bbtn_incluir.Enabled  := True;
      bbtn_Excluir.Enabled  := True;
      bbtn_alterar.enabled  := True;
      bbtn_Cancelar.Enabled := False;
      bbtn_gravar.Enabled   := False;
      bbtn_pesquisar.Enabled   := true;
      bbtn_sair.Enabled   := True;
   end;
 if dm.IBDS_Contribuiente.State in [dsInactive] then
   begin
      bbtn_incluir.Enabled  := True;
      bbtn_Excluir.Enabled  := True;
      bbtn_alterar.enabled  := True;
      bbtn_Cancelar.Enabled := False;
      bbtn_gravar.Enabled   := False;
      bbtn_pesquisar.Enabled   := true;
      bbtn_sair.Enabled   := True;
   end;
end;

procedure TLCD_0102.cxDBText_CodCidKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if Key = Vk_Return then
  begin
    if cxDBText_CodCid.Text = '' then
    begin
      Dlg_Cidades := TDlg_Cidades.Create(Self);
      if Dlg_Cidades.ShowModal = mrOK then
      begin
        qry_Declarante.FieldByName('CODCID').AsString := Formatfloat('000000', Dlg_Cidades.FDQuery_Pesquisa.FieldByName('CODIGO').AsFloat);
        qry_Declarante.FieldByName('NOME_CID').AsString  := Dlg_Cidades.FDQuery_Pesquisa.FieldByName('NOME').AsString;
        qry_Declarante.FieldByName('ESTADO').AsString  := Dlg_Cidades.FDQuery_Pesquisa.FieldByName('SIGLA').AsString;
        cxDBText_CEP.SetFocus;
      end;
      Dlg_Cidades.Free;
    end
    else
    begin
      FDQuery_Pesquisa.Close;
      FDQuery_Pesquisa.SQL.Clear;
      FDQuery_Pesquisa.SQL.Add('SELECT A.CODIGO, A.NOME, B.SIGLA FROM CIDADE A, ESTADO B ');
      FDQuery_Pesquisa.SQL.Add('WHERE (A.CODESTADO = B.CODIGO) AND (A.CODIGO = :CODIGO)');
      FDQuery_Pesquisa.ParamByName('CODIGO').AsInteger := StrToInt(cxDBText_CodCid.Text);
      FDQuery_Pesquisa.Open;
      if FDQuery_Pesquisa.RecNo > 0 then
      begin
        qry_Declarante.FieldByName('CODCID').AsString   := Formatfloat('000000', FDQuery_Pesquisa.FieldByName('CODIGO').AsFloat);
        qry_Declarante.FieldByName('NOME_CID').AsString := FDQuery_Pesquisa.FieldByName('NOME').AsString;
        qry_Declarante.FieldByName('ESTADO').AsString   := FDQuery_Pesquisa.FieldByName('SIGLA').AsString;
        cxDBText_CEP.SetFocus;
      end
      else
      begin
        MessageDlg('ATENÇÃO >>> NÃO HÁ REGISTRO COM ESSE CÓDIGO...VERIFIQUE!!!',MtInformation,[MbOk],0);
        cxDBText_CodCid.SetFocus;
        Exit;
      end;
    end;
  end;
end;

procedure TLCD_0102.DBEdit9KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if key = Vk_Return then
    bbtn_Gravar.SetFocus;
end;

procedure TLCD_0102.FormActivate(Sender: TObject);
begin
  montar_select(0, 0);
  if (qry_Declarante.state in [dsedit,dsinsert])
   then
     qry_Declarante.cancel;
  botoes;

end;

procedure TLCD_0102.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if key = Vk_Return then Perform(WM_NEXTDLGCTL,0,0);
  if key = Vk_Escape then Perform(WM_NEXTDLGCTL,1,0);
end;

procedure TLCD_0102.montar_select(wparametro, wcodigo : integer);
begin
  dm.IBDS_Contribuiente.Close;
  dm.IBDS_Contribuiente.SelectSQL.Clear;
  dm.IBDS_Contribuiente.SelectSQL.Add('SELECT A.*, B.NOME NOME_CID, C.SIGLA ESTADO ');
  dm.IBDS_Contribuiente.SelectSQL.Add('FROM CONTRIBUINTE A, CIDADE B, ESTADO C ');
  dm.IBDS_Contribuiente.SelectSQL.Add('WHERE ((A.CODCID = B.CODIGO) AND ');
  dm.IBDS_Contribuiente.SelectSQL.Add('(B.CODESTADO = C.CODIGO) ');
  if wparametro = 1 then
  begin
    dm.IBDS_Contribuiente.SelectSQL.Add('AND (A.CODIGO = :CODIGO))');
    dm.IBDS_Contribuiente.ParamByName('CODIGO').AsInteger := wcodigo;
  end
  else
  begin
    dm.IBDS_Contribuiente.SelectSQL.Add('AND (A.CODIGO = :CODIGO))');
    dm.IBDS_Contribuiente.ParamByName('CODIGO').AsInteger := wcodigo;
  end;
  dm.IBDS_Contribuiente.open;

  dm.IBDS_Contribuiente.FieldByName('NOME_CID').Required := False;
  dm.IBDS_Contribuiente.FieldByName('ESTADO').Required   := False;
end;

procedure TLCD_0102.bbtn_alterarClick(Sender: TObject);
begin
  Pn_Dados.Enabled := True;
  qry_Declarante.Edit;
  wcodigo := qry_Declarante.FieldByName('CODIGO').AsInteger;
  botoes;
  cxDBText_Nome.SetFocus;
end;

procedure TLCD_0102.bbtn_cancelarClick(Sender: TObject);
begin
  Pn_Dados.Enabled := False;
  qry_Declarante.Close;
  botoes;
  bbtn_Incluir.SetFocus;
end;

procedure TLCD_0102.bbtn_excluirClick(Sender: TObject);
var
  i, result : Integer;
begin
   // Abaixo a pergunta que coloca primeiro o NÃO e depois o SIM
   with CreateMessageDialog('Tem certeza que deseja excluir esse registro ???', mtConfirmation,[mbYes,mbNo]) do
     try
       for i := 0 to ComponentCount - 1 do
         if Components[i] is TButton then
           with TButton(Components[i]) do
             case ModalResult of
               mrYes : Caption := 'Não'; {6}
               mrNo  : Caption := 'Sim'; {7} {2 é o click no botão X da janela}
             end;
        Result := ShowModal;
     finally
       Free;
   end;

   // Testa o resultado
   if result = 7 then
   begin
      // colocar filtro pra não deixar excluir se tiver lançamento
     qry_Declarante.Delete;
     qry_Declarante.Close;
     qry_Declarante.Open;
   end;
end;

procedure TLCD_0102.bbtn_gravarClick(Sender: TObject);
begin
  Pn_Dados.Enabled := False;
  qry_Declarante.Post;
  if qry_Declarante.FieldByName('CODIGO').AsInteger = 0 then
  begin
    qry_Declarante.Close;
    dm.IBQ_pesquisa.Close;
    dm.IBQ_pesquisa.SQL.Clear;
    dm.IBQ_pesquisa.SQL.Add('SELECT MAX(CODIGO) CODIGO FROM CONTRIBUINTE ');
    DM.IBQ_pesquisa.Open;
    wcodigo := dm.IBQ_pesquisa.FieldByName('CODIGO').AsInteger;
    montar_select(1, wcodigo);
  end
  else
  begin
    dm.IBDS_Contribuiente.Close;
    montar_select(1, wcodigo);
  end;
  botoes;
  bbtn_Incluir.SetFocus;
end;

procedure TLCD_0102.bbtn_incluirClick(Sender: TObject);
begin
  Pn_Dados.Enabled := True;
  dm.IBDS_Contribuiente.Append;
  dm.IBDS_Contribuiente.FieldByName('CODIGO').AsInteger := 0;
  dm.IBDS_Contribuiente.FieldByName('FLG_SITUACAO').AsString := 'A';
  botoes;
  cxDBText_Nome.SetFocus;
end;

procedure TLCD_0102.bbtn_pesquisarClick(Sender: TObject);
begin
  Dlg_Contribuinte := TDlg_Contribuinte.Create(Self);
  if Dlg_Contribuinte.ShowModal = MrOk  then
  begin
    montar_select(1, Dlg_Contribuinte.FDQuery_Pesquisa.FieldByName('CODIGO').AsInteger);
    botoes;
  end;
  Dlg_Contribuinte.Free;
end;

procedure TLCD_0102.bbtn_sairClick(Sender: TObject);
begin
  Close;
end;

end.
