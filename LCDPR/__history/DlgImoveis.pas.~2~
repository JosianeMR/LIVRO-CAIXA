unit DlgImoveis;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  Grids, DBGrids, Db, DBTables, ComCtrls, StdCtrls, ExtCtrls, Buttons,
  IBCustomDataSet, IBQuery;

type
  TDlg_Imoveis = class(TForm)
    ds_pesquisa: TDataSource;
    DBGrid1: TDBGrid;
    EdPesq: TEdit;
    Bevel1: TBevel;
    Label1: TLabel;
    StatusBar1: TStatusBar;
    IBQ_Pesquisa: TIBQuery;
    RG_pesquisa: TRadioGroup;
    RG_ordem: TRadioGroup;
    Bbtn_Incluir: TBitBtn;
    procedure FormKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure FormShow(Sender: TObject);
    procedure EdPesqChange(Sender: TObject);
    procedure RG_ordemClick(Sender: TObject);
    procedure RG_pesquisaClick(Sender: TObject);
    procedure IBQ_PesquisaAfterOpen(DataSet: TDataSet);
    procedure DBGrid1DblClick(Sender: TObject);
    function RemoveAcento(Str: string): string;
    procedure Bbtn_IncluirClick(Sender: TObject);

  private
    { Private declarations }
    itamanho : integer;
  public
    { Public declarations }
  end;

var
  Dlg_Imoveis: TDlg_Imoveis;

implementation

uses Arquivos, FAZSETUP, FAZ0136;

{$R *.DFM}

function TDlg_Imoveis.RemoveAcento(Str: string): string;
const
  ComAcento = '‡‚ÍÙ˚„ı·ÈÌÛ˙Á¸¿¬ ‘€√’¡…Õ”⁄«‹';
  SemAcento = 'aaeouaoaeioucuAAEOUAOAEIOUCU';
var
   x: Integer;
begin;
  for x := 1 to Length(Str) do
  if Pos(Str[x],ComAcento) <> 0 then
    Str[x] := SemAcento[Pos(Str[x], ComAcento)];
  Result := Str;
end;

procedure TDlg_Imoveis.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if (Shift = [ssAlt]) and (Key = VK_F4) then Key := VK_Clear;
  if (key = VK_Return) and
     (IBQ_Pesquisa.Active) and
     (IBQ_Pesquisa.recordcount <> 0)
                     then ModalResult := mrOk;
  if key = vk_up     then IBQ_Pesquisa.Prior;
  if key = vk_down   then IBQ_Pesquisa.Next;
  if key = VK_Escape then ModalResult := mrCancel;
end;

procedure TDlg_Imoveis.FormShow(Sender: TObject);
begin
//  Caption := caption + '          '+ DM.sempresa;
  if RG_ordem.ItemIndex = 0 then itamanho := 1
  else itamanho := 0;
  EdPesq.Clear;
  EdPesq.SetFocus;
  IBQ_Pesquisa.Open;
end;

procedure TDlg_Imoveis.EdPesqChange(Sender: TObject);
begin
  if Length(EdPesq.Text) > itamanho then
  begin
    with IBQ_Pesquisa, SQL do
    begin
      Close;
      Clear;
      Add('SELECT * FROM BENS_PATR ');
      if RG_ordem.ItemIndex = 0 then
      begin
        Add('WHERE (UPPER(NOME) LIKE :N) ORDER BY NOME');
        if RG_pesquisa.ItemIndex = 0 then
           ParamByName('N').AsString := AnsiUpperCase(EdPesq.Text)+'%'
        else
           ParamByName('N').AsString := '%'+AnsiUpperCase(EdPesq.Text)+'%';
      end
      else
      begin
        Add('WHERE (NUMERO = :N) ORDER BY NUMERO');
        ParamByName('N').AsInteger := strtoint(EdPesq.Text);
      end;
      Open;
    end;
  end;
end;

procedure TDlg_Imoveis.RG_ordemClick(Sender: TObject);
begin
  if RG_ordem.ItemIndex = 0 then
     itamanho := 1
  else
     itamanho := 0;
  EdPesq.setfocus;
end;

procedure TDlg_Imoveis.RG_pesquisaClick(Sender: TObject);
begin
  EdPesq.setfocus;
end;

procedure TDlg_Imoveis.IBQ_PesquisaAfterOpen(DataSet: TDataSet);
begin
  (IBQ_Pesquisa.fieldbyname('CODIGO') As TIntegerfield).displayformat := '000000';
end;

procedure TDlg_Imoveis.DBGrid1DblClick(Sender: TObject);
begin
  ModalResult := Mrok;
end;


procedure TDlg_Imoveis.Bbtn_IncluirClick(Sender: TObject);
begin
  with dm.IBQ_Pesquisa, SQL do
  begin
     Clear;
     Close;
     Add('SELECT BENS_PATRIMONIAIS, USUARIO, SENHA FROM SENHA WHERE ((USUARIO = :USA) AND (SENHA = :SEN))');
     ParamByName('USA').AsString := Faz_Setup.SUsuario;
     ParamByName('SEN').AsString := Faz_Setup.SSenha;
     Open;
  end;
  if dm.IBQ_Pesquisa.FieldByName('BENS_PATRIMONIAIS').AsString = 'S' then
  begin
    FAZ_0136 := TFAZ_0136.Create(Self);
    FAZ_0136.ShowModal;
    FAZ_0136.Destroy;
  end;
end;

end.
